FILE: multipleConditions.kt
    public abstract interface A : R|kotlin/Any| {
        public abstract fun foo(): R|kotlin/Unit|

    }
    public abstract interface B : R|A| {
        public abstract fun bar(): R|kotlin/Unit|

    }
    public abstract interface C : R|A| {
        public abstract fun baz(): R|kotlin/Unit|

    }
    public final fun test_1(x: R|kotlin/Any|): R|kotlin/Unit| {
        when () {
            when () {
                (R|<local>/x| is R|B|) ->  {
                    (R|<local>/x| is R|C|)
                }
                else ->  {
                    Boolean(false)
                }
            }
             ->  {
                R|<local>/x|.<Unresolved name: foo>#()
                R|<local>/x|.<Unresolved name: bar>#()
                R|<local>/x|.<Unresolved name: baz>#()
            }
            else ->  {
            }
        }

    }
    public final fun test_2(x: R|kotlin/Any|): R|kotlin/Unit| {
        when () {
            when () {
                (R|<local>/x| is R|B|) ->  {
                    Boolean(true)
                }
                else ->  {
                    (R|<local>/x| is R|C|)
                }
            }
             ->  {
                R|<local>/x|.<Unresolved name: foo>#()
                R|<local>/x|.<Unresolved name: bar>#()
                R|<local>/x|.<Unresolved name: baz>#()
            }
            else ->  {
            }
        }

    }
